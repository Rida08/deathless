#include <iostream>
#include <vector>



using namespace std;
using ll = long long;

int n, W, res = 0, kol;
vector<int>w, a, amaunt;

void dt(int n1, int s, int p, int l, vector<int>&am) {
        if (s > W) return;
        if (n1 == n) {
            if (p > res) {
                res = p;
                kol = l;
                amaunt=am;
            } else if (p == res && l < kol) {
                kol = l;
                amaunt = am;
            }else if (p == res && l == kol && am < amaunt) {
                amaunt = am;
            }
            return;
        }
        am.push_back(n1);
      //  cout << l;
        dt(n1+1, s + w[n1], p + a[n1], l + 1, am);
        am.pop_back();
}

int main() {
    cin >> n >> W;
    for (int i = 0; i < n; ++i) {
        int x, y;
        cin >> x >> y;
        w.push_back(x), a.push_back(y);
    }
    vector<int>am;
    dt(0, 0, 0, 0, am);
    cout << kol << " " << res << " " << "\n";
    for (int i = 0; i < amaunt.size(); ++i) {
        cout << amaunt[i]+1 << " ";
    }
}

//#include <iostream>
//#include <vector>
//
//
//
//using namespace std;
//using ll = long long;
//
//int n, W, res = 0, kol;
//vector<int>w, a, amaunt;
//
//void dt(int n1, int s, int p, int l, vector<int>&am) {
//    for (int i = n1; i < n; ++i) {
//        if (s + w[i] > W) {
//            if (p > res) {
//                res = p;
//                kol = l;
//                amaunt = am;
//            }
//            else if (p == res && l < kol) {
//                kol = l;
//                amaunt = am;
//            }
//            else if (p == res && l == kol && am < amaunt) {
//                amaunt = am;
//            }
//            return;
//        }
//        am.push_back(i);
//        dt(i + 1, s + w[i], p + a[i], l + 1, am);
//        am.pop_back();
//    } 
//}
//
//int main() {
//    cin >> n >> W;
//    for (int i = 0; i < n; ++i) {
//        int x, y;
//        cin >> x >> y;
//        w.push_back(x), a.push_back(y);
//    }
//    vector<int>am;
//    dt(0, 0, 0, 0, am);
//        cout << kol << " " << res << " " << "\n";
//        for (int i = 0; i < amaunt.size(); ++i) {
//            cout << amaunt[i]+1 << " ";
//        }
//}
