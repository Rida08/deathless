#include <iostream>
#include <vector>



using namespace std;
using ll = long long;

ll n, W, res = -1, kol;
ll cost = -1;
vector<ll>w, a, amaunt, ans;

void dt(ll n1, ll s, ll p) {
    if (s > W) return;
    if(n1==n){
        if (p > res) {
            res = p;
            ans = amaunt;

        }
        else if (p == res && amaunt.size()<ans.size()) {
            res = p;
            ans = amaunt;
        }
        else if (p == res && amaunt.size() == ans.size() && amaunt<ans ) {
            res = p;
            ans = amaunt;
        }
        return;
    }
    dt(n1 + 1, s, p);
    amaunt.push_back(n1);
    dt(n1 + 1, s + w[n1], p + a[n1]);
    amaunt.pop_back(); 
}

int main() {
    cin >> n >> W;
    for (int i = 0; i < n; ++i) {
        ll x, y;
        cin >> x >> y;
        w.push_back(x), a.push_back(y);
    }
    vector<ll>am;
    dt(0, 0, 0);
        cout << ans.size() << " " << res << " " << "\n";
        for (ll i = 0; i < ans.size(); ++i) {
            cout << ans[i]+1 << " ";
        }
}
