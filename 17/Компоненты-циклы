#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <queue>

using namespace std;
using ll = long long;

const int N=1e6;
int n, m, used[N], an = 0, ch = 1;

vector<int>g[N];

void dfs(int v) {
    used[v] = 1;
    if (g[v].size() != 2) ch = 0;
    for (int u : g[v]) {
        if (!used[u]) {
            dfs(u);
        }
    }
}

int main() {
    cin >> n>>m;
    for (int i = 0; i < m; ++i) {
        int x, y;
        cin >> x >> y;
        g[x].push_back(y), g[y].push_back(x);
    }
    for (int i = 0; i < n; ++i) if (!used[i]) {
        ch = 1;
        dfs(i);
        if (ch == 1) an++;
    }
    cout << an;
}
