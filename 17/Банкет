#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <queue>

using namespace std;
using ll = long long;

const int N=1e3;
int n, m, used[N], col[N], ch=1;

vector<int>g[N];

void dfs(int v, int c) {
    used[v] = 1;
    col[v] = c;
    for (int u : g[v]) {
        if (!used[u]) {
            dfs(u, 1 - c);
        } else {
            if (col[u] == col[v]) ch = 0;
        }
    }
}

int main() {
    cin >> n>>m;
    for (int i = 0; i < m; ++i) {
        int x, y;
        cin >> x >> y;
        g[x].push_back(y), g[y].push_back(x);
    }
    for (int i = 0; i < n; ++i) if (!used[i]) {
        dfs(i, 0);
    }
    if (ch) cout << "YES";
    else cout << "NO";
}
