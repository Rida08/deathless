	#include <iostream>
	#include <string>
	#include <algorithm>
	#include <vector>
	using namespace std;
	int n;
	long* x = new long[n];
	long* y = new long[n];
	long* p = new long[n];
	long* an = new long[n+1];
	int walk(int i, int s, int rez, vector<int>used)
	{
		used.push_back(1);
		rez++;
		for (int j = 0; j < n; ++j) {
			if (p[i] * s >= abs(x[i] - x[j]) + abs(y[i] - y[j]) && !used[j])
				walk(j, s, rez, used);
		}
		return rez;
	}
	int main()
	{
		an[0] = 0;
		cin >> n;
		for (int i = 0; i < n; ++i)		cin >> x[i] >> y[i] >> p[i];
		for (int i = 0; i < n; ++i) {
			long l = 0, r = 10e9, m = r / 2;
			while (r - l != 1) {
				vector<int>used(0, n);
				n > walk(i, m, 0, used) ? l = m : r = m;
				m = (r + l) / 2;
			}
			an[i+1] = min(an[i], r);
		}
		cout << an[n];
	}

