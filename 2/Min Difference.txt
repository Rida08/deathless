#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;
int main()
{
	long long n, m, k;
	cin >> n >> m;
	long long* a = new long long[n];
	vector<int> b;
	long long* ans = new long long[n+1];
	for (int i = 0; i < n; ++i) cin >> a[i];
	for (int i = 0; i < m; ++i) {
		cin >> k;
		b.push_back(k);
	}
	ans[0] = abs(b[0]-a[0]);
	sort(begin(b), end(b));
	for (int i = 0; i < n; ++i) {
		if (b[0] > a[i]) ans[i + 1] = min(ans[i], abs(a[i] - b[0]));
		else if (b[m - 1] < a[i]) ans[i + 1] = min(ans[i], abs(b[m - 1] - a[i]));
		else{
			long long l = 0, r = m, m = r / 2;
			while (r - l != 1) {
				b[m] > a[i] ? r = m : l = m;
				m = (l + r) / 2;
			}
			abs(a[i] - b[r]) > abs(a[i] - b[r - 1]) ? ans[i + 1] = min(ans[i], abs(a[i] - b[r - 1])) : ans[i+1]= min(ans[i],abs(a[i] - b[r]));
		}
	}
	cout << ans[n];
}
