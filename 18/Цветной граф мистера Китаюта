#include <bits/stdc++.h>

using namespace std;
using ll = long long;

int n, m, q, k = 0;
const int N = 1e2 + 1;
vector < pair < int, int >> a[N];
bool used[N];
set < int > s1, s;

void dfs(int u, int c, int e) {
    if(u==e){
        s.insert(c);
        return;
    }
    used[u] = 1;
    for (pair < int, int > v: a[u]) {
        if (!used[v.first] && v.second==c) {
            dfs(v.first, c, e);
        }
    }
}

int main() {
    cin >> n >> m;
    int x, y, z;
    pair < int, int > l;
    for (int i = 0; i < m; ++i) {
        cin >> x >> y >> z;
        l.first = y, l.second = z;
        a[x].push_back(l);
        l.first = x;
        a[y].push_back(l);
        s1.insert(z);

    }
    cin >> q;
    for (int i = 0; i < q; ++i) {
        cin >> x >> y;
        k = 0;
        for (int j: s1) {
            memset(used, 0, N);
            dfs(x, j, y);
            k+=s.size();
            s.clear();
        }
        cout << k << "\n";
    }
}
