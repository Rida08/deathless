#include <bits/stdc++.h>

using namespace std;
using ll = long long;

const int N = 2e5 + 1;
bool used[N];
vector < int > g[N];
int t, n, m;
vector < int > c1, c2;

void dfs(int u, int c) {
    used[u] = 1;
    if (c == 1) c1.push_back(u);
    else c2.push_back(u);
    for (int v: g[u]) {
        if (!used[v]) {
            dfs(v, 1 - c);
        }
    }
}

int main() {
    ios::sync_with_stdio(0);
    cout.tie(0), cin.tie(0);
    cin >> t;
    for (int i = 0; i < t; ++i) {
        c1.clear(), c2.clear();
        cin >> n >> m;
        memset(used, 0, n + 1);
        for (int j = 1; j <= n; ++j) g[i].clear();
        for (int j = 0; j < m; ++j) {
            int x, y;
            cin >> x >> y;
            g[x].push_back(y);
            g[y].push_back(x);
        }
        dfs(1, 1);
        if (c1.size() <= c2.size()) {
            cout << c1.size() << "\n";
            for (int j = 0; j < c1.size(); ++j) cout << c1[j] << " ";
        }
        else {
            cout << c2.size() << "\n";
            for (int j = 0; j < c2.size(); ++j) cout << c2[j] << " ";
        }
        cout << "\n";
    }
}
